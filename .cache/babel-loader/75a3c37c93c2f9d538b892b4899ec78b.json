{"ast":null,"code":"import { css } from 'styled-components';\nexport const throwMissingParam = paramName => {\n  throw Error(`Missing param: ${paramName}`);\n};\nexport const createMatrix = (xLength, yLength) => [...Array(xLength)].map(() => [...Array(yLength)]);\nexport const makeGenerateRandomIntInclusive = (min, max) => () => {\n  const minInt = Math.ceil(min);\n  const maxInt = Math.floor(max);\n  return Math.floor(Math.random() * (maxInt - minInt + 1)) + minInt;\n};\nexport const extractPropFromObjectMatrix = prop => matrix => matrix.map(column => column.map(row => row && row[prop]));\nexport const mutatePropsInObjectMatrix = prop => matrix => propMatrix => ({\n  mutate: () => matrix.forEach((column, colIndex) => column.forEach((row, rowIndex) => {\n    matrix[colIndex][rowIndex][prop] = propMatrix[colIndex][rowIndex];\n  }))\n});\nexport const compose2 = (fn1, fn2) => arg => fn1(fn2(arg));\nexport const compose = function () {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return fns.reduce(compose2);\n};\nexport const repeat = times => fn => [...Array(times).keys()].map(num => fn(num));\nconst displayWidths = [0, 600, 800, 1000, 1200, 10000];\nexport const media = {};\ndisplayWidths.forEach((width, index, array) => {\n  if (index === array.length - 1) return;\n\n  media[`min${width}max${array[index + 1]}`] = function () {\n    return css([\"@media screen and (min-width:\", \"px) and (max-width:\", \"px){\", \"}\"], width, array[index + 1], css(...arguments));\n  };\n});\nexport const wait = function () {\n  let ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\nexport const areItemsAdjacent = (firstItem, secondItem) => firstItem.x === secondItem.x && Math.abs(firstItem.y - secondItem.y) === 1 || firstItem.y === secondItem.y && Math.abs(firstItem.x - secondItem.x) === 1;\nexport const doItemsMatch = (firstItem, secondItem) => firstItem && secondItem && firstItem.x === secondItem.x && firstItem.y === secondItem.y;","map":{"version":3,"sources":["C:/Users/17144/gametest/src/App/utils/utils.js"],"names":["css","throwMissingParam","paramName","Error","createMatrix","xLength","yLength","Array","map","makeGenerateRandomIntInclusive","min","max","minInt","Math","ceil","maxInt","floor","random","extractPropFromObjectMatrix","prop","matrix","column","row","mutatePropsInObjectMatrix","propMatrix","mutate","forEach","colIndex","rowIndex","compose2","fn1","fn2","arg","compose","fns","reduce","repeat","times","fn","keys","num","displayWidths","media","width","index","array","length","wait","ms","Promise","resolve","setTimeout","areItemsAdjacent","firstItem","secondItem","x","abs","y","doItemsMatch"],"mappings":"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","sourcesContent":["import { css } from 'styled-components';\r\nimport 'styled-components/macro';\r\n\r\nexport const throwMissingParam = paramName => {\r\n    throw Error(`Missing param: ${paramName}`)\r\n};\r\n\r\nexport const createMatrix = (xLength, yLength) => [...Array(xLength)].map(() => [...Array(yLength)]);\r\n\r\nexport const makeGenerateRandomIntInclusive = (min, max) =>\r\n    () => {\r\n        const minInt = Math.ceil(min);\r\n        const maxInt = Math.floor(max);\r\n        return Math.floor(Math.random() * (maxInt - minInt + 1)) + minInt;\r\n    };\r\n\r\nexport const extractPropFromObjectMatrix = prop =>\r\n    matrix =>\r\n        matrix.map(column =>\r\n            column.map(row => row && row[prop])\r\n        );\r\n\r\nexport const mutatePropsInObjectMatrix = prop =>\r\n    matrix =>\r\n        propMatrix => ({\r\n            mutate: () => matrix.forEach((column, colIndex) =>\r\n                column.forEach((row, rowIndex) => {\r\n                    matrix[colIndex][rowIndex][prop] = propMatrix[colIndex][rowIndex];\r\n                })\r\n            )\r\n        });\r\n\r\nexport const compose2 = (fn1, fn2) => arg => fn1(fn2(arg));\r\nexport const compose = (...fns) => fns.reduce(compose2);\r\nexport const repeat = times => fn => [...Array(times).keys()].map(num => fn(num));\r\n\r\nconst displayWidths = [0, 600, 800, 1000, 1200, 10000];\r\nexport const media = {};\r\ndisplayWidths.forEach((width, index, array) => {\r\n\r\n    if (index === array.length - 1) return;\r\n    media[`min${width}max${array[index + 1]}`] = (...args) => css`\r\n        @media screen\r\n        and (min-width: ${width}px)\r\n        and (max-width: ${array[index + 1]}px) {\r\n            ${css(...args)}\r\n        }\r\n    `;\r\n});\r\n\r\nexport const wait = (ms = 500) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const areItemsAdjacent = (firstItem, secondItem) =>\r\n    (firstItem.x === secondItem.x && Math.abs(firstItem.y - secondItem.y) === 1) ||\r\n    (firstItem.y === secondItem.y && Math.abs(firstItem.x - secondItem.x) === 1);\r\n\r\nexport const doItemsMatch = (firstItem, secondItem) =>\r\n    firstItem && secondItem && firstItem.x === secondItem.x && firstItem.y === secondItem.y;\r\n"]},"metadata":{},"sourceType":"module"}