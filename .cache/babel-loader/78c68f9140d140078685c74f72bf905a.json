{"ast":null,"code":"import { traverseAndFindCombos, traverseAndFindPotentialCombos, generateComboMatrixFromCombos, createNullifiedCombosMatrix, createNullShiftedMatrix, createNullFilledMatrix, createTwoFieldSwappedMatrix, extractJewelIndexFrom, generateJewelIndex, mutateJewelIndexOf, makeBoard, BOARD_HEIGHT, BOARD_WIDTH } from './board';\nimport { wait, repeat } from '../utils/utils.js';\nconst board = makeBoard();\nexport const initialMatrix = extractJewelIndexFrom(board);\nexport { createTwoFieldSwappedMatrix };\nexport { BOARD_HEIGHT };\nexport { BOARD_WIDTH };\nexport async function updateBoardUntilNoCombos(_ref) {\n  let {\n    hadCombo = false,\n    setMatrix,\n    setComboMatrix,\n    bumpScore\n  } = _ref;\n  const comboMap = traverseAndFindCombos(board);\n\n  const comboCountReducer = (acc, col) => col.length ? acc + 1 : acc;\n\n  const comboCount = comboMap.x.reduce(comboCountReducer, 0) + comboMap.y.reduce(comboCountReducer, 0);\n\n  if (!comboCount) {\n    return hadCombo || false;\n  }\n\n  const currentMatrix = extractJewelIndexFrom(board);\n  const comboMatrix = generateComboMatrixFromCombos(comboMap);\n  const nullifiedMatrix = createNullifiedCombosMatrix(comboMatrix)(currentMatrix);\n  setComboMatrix(nullifiedMatrix);\n  await wait();\n  setMatrix(nullifiedMatrix);\n  await wait();\n  const shiftedMatrix = createNullShiftedMatrix(nullifiedMatrix);\n  setComboMatrix(shiftedMatrix);\n  setMatrix(shiftedMatrix);\n  await wait();\n  const filledMatrix = createNullFilledMatrix(generateJewelIndex)(shiftedMatrix);\n  setComboMatrix(filledMatrix);\n  setMatrix(filledMatrix);\n  mutateJewelIndexOf(board)(filledMatrix).mutate();\n  repeat(comboCount)(bumpScore);\n  await wait();\n  return updateBoardUntilNoCombos({\n    hadCombo: true,\n    setMatrix,\n    setComboMatrix,\n    bumpScore\n  });\n}\n;\nexport async function updateBoardWithMatrix(_ref2) {\n  let {\n    newMatrix,\n    setMatrix,\n    setComboMatrix,\n    bumpScore\n  } = _ref2;\n  mutateJewelIndexOf(board)(newMatrix).mutate();\n  const hadCombos = await updateBoardUntilNoCombos({\n    setMatrix,\n    setComboMatrix,\n    bumpScore\n  });\n  return hadCombos;\n}\n;\nexport function revertBoard(oldMatrix) {\n  mutateJewelIndexOf(board)(oldMatrix).mutate();\n}\n;\nexport function getHint() {\n  const potentialCombos = traverseAndFindPotentialCombos(board);\n  return potentialCombos.length && potentialCombos[0].length && potentialCombos[0][0];\n}\n;","map":{"version":3,"sources":["C:/Users/17144/gametest/src/App/engine/engine.js"],"names":["traverseAndFindCombos","traverseAndFindPotentialCombos","generateComboMatrixFromCombos","createNullifiedCombosMatrix","createNullShiftedMatrix","createNullFilledMatrix","createTwoFieldSwappedMatrix","extractJewelIndexFrom","generateJewelIndex","mutateJewelIndexOf","makeBoard","BOARD_HEIGHT","BOARD_WIDTH","wait","repeat","board","initialMatrix","updateBoardUntilNoCombos","hadCombo","setMatrix","setComboMatrix","bumpScore","comboMap","comboCountReducer","acc","col","length","comboCount","x","reduce","y","currentMatrix","comboMatrix","nullifiedMatrix","shiftedMatrix","filledMatrix","mutate","updateBoardWithMatrix","newMatrix","hadCombos","revertBoard","oldMatrix","getHint","potentialCombos"],"mappings":"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","sourcesContent":["import {\r\n    traverseAndFindCombos,\r\n    traverseAndFindPotentialCombos,\r\n    generateComboMatrixFromCombos,\r\n    createNullifiedCombosMatrix,\r\n    createNullShiftedMatrix,\r\n    createNullFilledMatrix,\r\n    createTwoFieldSwappedMatrix,\r\n    extractJewelIndexFrom,\r\n    generateJewelIndex,\r\n    mutateJewelIndexOf,\r\n    makeBoard,\r\n    BOARD_HEIGHT,\r\n    BOARD_WIDTH\r\n} from './board';\r\nimport { wait, repeat } from '../utils/utils.js';\r\n\r\nconst board = makeBoard();\r\n\r\nexport const initialMatrix = extractJewelIndexFrom(board);\r\nexport { createTwoFieldSwappedMatrix };\r\nexport { BOARD_HEIGHT };\r\nexport { BOARD_WIDTH };\r\n\r\nexport async function updateBoardUntilNoCombos({\r\n    hadCombo = false,\r\n    setMatrix,\r\n    setComboMatrix,\r\n    bumpScore\r\n}) {\r\n\r\n    const comboMap = traverseAndFindCombos(board);\r\n    const comboCountReducer = (acc, col) => col.length ? acc + 1 : acc;\r\n    const comboCount = comboMap.x.reduce(comboCountReducer, 0) +\r\n        comboMap.y.reduce(comboCountReducer, 0);\r\n\r\n    if (!comboCount) {\r\n        return hadCombo || false;\r\n    }\r\n\r\n    const currentMatrix = extractJewelIndexFrom(board);\r\n    const comboMatrix = generateComboMatrixFromCombos(comboMap);\r\n    const nullifiedMatrix = createNullifiedCombosMatrix(comboMatrix)(currentMatrix);\r\n    setComboMatrix(nullifiedMatrix);\r\n    await wait();\r\n\r\n    setMatrix(nullifiedMatrix);\r\n    await wait();\r\n\r\n    const shiftedMatrix = createNullShiftedMatrix(nullifiedMatrix);\r\n    setComboMatrix(shiftedMatrix);\r\n    setMatrix(shiftedMatrix);\r\n    await wait();\r\n\r\n    const filledMatrix = createNullFilledMatrix(generateJewelIndex)(shiftedMatrix);\r\n    setComboMatrix(filledMatrix);\r\n    setMatrix(filledMatrix);\r\n    mutateJewelIndexOf(board)(filledMatrix).mutate();\r\n    repeat(comboCount)(bumpScore);\r\n    await wait();\r\n\r\n    return updateBoardUntilNoCombos({ hadCombo: true, setMatrix, setComboMatrix, bumpScore });\r\n};\r\n\r\nexport async function updateBoardWithMatrix({ newMatrix, setMatrix, setComboMatrix, bumpScore }) {\r\n\r\n    mutateJewelIndexOf(board)(newMatrix).mutate();\r\n\r\n    const hadCombos = await updateBoardUntilNoCombos({ setMatrix, setComboMatrix, bumpScore });\r\n    return hadCombos;\r\n};\r\n\r\nexport function revertBoard(oldMatrix) {\r\n\r\n    mutateJewelIndexOf(board)(oldMatrix).mutate();\r\n};\r\n\r\nexport function getHint() {\r\n\r\n    const potentialCombos = traverseAndFindPotentialCombos(board);\r\n    return potentialCombos.length && potentialCombos[0].length && potentialCombos[0][0];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}