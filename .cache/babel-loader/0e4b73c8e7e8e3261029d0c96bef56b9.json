{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"C:\\\\Users\\\\17144\\\\gametest\\\\src\\\\App\\\\components\\\\board\\\\board.js\";\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { css } from 'styled-components';\nimport Jewel from '../jewel/jewel.js';\nimport { initialMatrix, updateBoardUntilNoCombos, updateBoardWithMatrix, revertBoard, createTwoFieldSwappedMatrix, getHint } from '../../engine/engine.js';\nimport { JewelsIndexHash } from '../../engine/jewels.js';\nimport { wait, areItemsAdjacent, doItemsMatch } from '../../utils/utils.js';\nconst BoardCss = css([\"display:grid;grid-template:repeat(8,1fr) / repeat(8,1fr);grid-area:3 / 4 / 8 / 9;gap:0.4%;\"]);\n\nvar _StyledDiv = _styled.div.withConfig({\n  displayName: \"board___StyledDiv\",\n  componentId: \"sc-1e31s1q-0\"\n})([\"\", \"\"], BoardCss);\n\nfunction Board(_ref, ref) {\n  let {\n    bumpScore\n  } = _ref;\n  const [matrix, setMatrix] = useState(initialMatrix);\n  const [firstItem, setFirstItem] = useState(null);\n  const [secondItem, setSecondItem] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(true);\n  const [comboMatrix, setComboMatrix] = useState(initialMatrix);\n  useEffect(() => {\n    updateBoardUntilNoCombos({\n      setMatrix,\n      setComboMatrix,\n      bumpScore\n    }).then(() => {\n      setIsProcessing(false);\n    });\n  }, [bumpScore]);\n  useImperativeHandle(ref, () => ({\n    showHint\n  }));\n\n  async function showHint() {\n    setIsProcessing(true);\n    const hint = getHint();\n\n    if (!hint) {\n      return false;\n    }\n\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = hint;\n    await async function focusAndUnfocus(repeatCount) {\n      if (repeatCount === 0) {\n        return;\n      }\n\n      setFirstItem({\n        x: x1,\n        y: y1\n      });\n      setSecondItem({\n        x: x2,\n        y: y2\n      });\n      await wait(100);\n      setFirstItem(null);\n      setSecondItem(null);\n      await wait(100);\n      await focusAndUnfocus(repeatCount - 1);\n    }(5);\n    setIsProcessing(false);\n    return true;\n  }\n\n  ;\n\n  async function onItemClick(x, y) {\n    const oldMatrix = matrix;\n\n    if (isProcessing) {\n      return;\n    }\n\n    if (!firstItem) {\n      return setFirstItem({\n        x,\n        y\n      });\n    }\n\n    if (doItemsMatch(firstItem, {\n      x,\n      y\n    })) {\n      return setFirstItem(null);\n    }\n\n    if (areItemsAdjacent(firstItem, {\n      x,\n      y\n    })) {\n      const tempSecondItem = {\n        x,\n        y\n      };\n      setIsProcessing(true);\n      setSecondItem(tempSecondItem);\n      await wait();\n      const newMatrix = createTwoFieldSwappedMatrix(firstItem)(tempSecondItem)(oldMatrix);\n      setMatrix(newMatrix);\n      await wait();\n      setFirstItem(null);\n      setSecondItem(null);\n      const moveHadHits = await updateBoardWithMatrix({\n        newMatrix,\n        setMatrix,\n        setComboMatrix,\n        bumpScore\n      });\n\n      if (!moveHadHits) {\n        setMatrix(oldMatrix);\n        revertBoard(oldMatrix);\n      }\n\n      setIsProcessing(false);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(_StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }\n  }, matrix.map((xArray, x) => xArray.map((yField, y) => /*#__PURE__*/React.createElement(Jewel, {\n    key: 8 * x + y,\n    x: x,\n    y: y,\n    isFocused: doItemsMatch({\n      x,\n      y\n    }, firstItem) || doItemsMatch({\n      x,\n      y\n    }, secondItem),\n    isInCombo: comboMatrix[x][y] === null,\n    backgroundColor: JewelsIndexHash[matrix[x][y]],\n    onItemClick: onItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }))));\n}\n\n;\nexport default forwardRef(Board);","map":{"version":3,"sources":["C:/Users/17144/gametest/src/App/components/board/board.js"],"names":["React","useState","useEffect","forwardRef","useImperativeHandle","css","Jewel","initialMatrix","updateBoardUntilNoCombos","updateBoardWithMatrix","revertBoard","createTwoFieldSwappedMatrix","getHint","JewelsIndexHash","wait","areItemsAdjacent","doItemsMatch","BoardCss","Board","ref","bumpScore","matrix","setMatrix","firstItem","setFirstItem","secondItem","setSecondItem","isProcessing","setIsProcessing","comboMatrix","setComboMatrix","then","showHint","hint","x1","y1","x2","y2","focusAndUnfocus","repeatCount","x","y","onItemClick","oldMatrix","tempSecondItem","newMatrix","moveHadHits","map","xArray","yField"],"mappings":"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","sourcesContent":["import React, {\r\n    useState,\r\n    useEffect,\r\n    forwardRef,\r\n    useImperativeHandle\r\n} from 'react';\r\nimport { css } from 'styled-components';\r\nimport 'styled-components/macro';\r\nimport Jewel from '../jewel/jewel.js';\r\nimport {\r\n    initialMatrix,\r\n    updateBoardUntilNoCombos,\r\n    updateBoardWithMatrix,\r\n    revertBoard,\r\n    createTwoFieldSwappedMatrix,\r\n    getHint\r\n} from '../../engine/engine.js';\r\nimport { JewelsIndexHash } from '../../engine/jewels.js';\r\nimport { wait, areItemsAdjacent, doItemsMatch } from '../../utils/utils.js';\r\n\r\nconst BoardCss = css`\r\n    display: grid;\r\n    grid-template: repeat(8, 1fr) / repeat(8, 1fr);\r\n    grid-area: 3 / 4 / 8 / 9;\r\n    gap: 0.4%;\r\n`;\r\n\r\nfunction Board({ bumpScore }, ref) {\r\n    const [matrix, setMatrix] = useState(initialMatrix);\r\n    const [firstItem, setFirstItem] = useState(null);\r\n    const [secondItem, setSecondItem] = useState(null);\r\n    const [isProcessing, setIsProcessing] = useState(true);\r\n    const [comboMatrix, setComboMatrix] = useState(initialMatrix);\r\n\r\n    useEffect(() => {\r\n\r\n        updateBoardUntilNoCombos({ setMatrix, setComboMatrix, bumpScore })\r\n            .then(() => {\r\n                setIsProcessing(false)\r\n            });\r\n    }, [bumpScore]);\r\n\r\n    useImperativeHandle(ref, () => ({ showHint }));\r\n\r\n    async function showHint() {\r\n        setIsProcessing(true);\r\n\r\n        const hint = getHint();\r\n        if (!hint) {\r\n            return false;\r\n        }\r\n\r\n        const { x1, y1, x2, y2 } = hint;\r\n        await (async function focusAndUnfocus(repeatCount) {\r\n            if (repeatCount === 0) {\r\n                return;\r\n            }\r\n\r\n            setFirstItem({ x: x1, y: y1});\r\n            setSecondItem({ x: x2, y: y2});\r\n            await wait(100);\r\n\r\n            setFirstItem(null);\r\n            setSecondItem(null);\r\n            await wait(100);\r\n\r\n            await focusAndUnfocus(repeatCount - 1);\r\n        })(5);\r\n\r\n        setIsProcessing(false);\r\n        return true;\r\n    };\r\n\r\n    async function onItemClick(x, y) {\r\n\r\n        const oldMatrix = matrix;\r\n        if (isProcessing) {\r\n            return;\r\n        }\r\n        if (!firstItem) {\r\n            return setFirstItem({ x, y });\r\n        }\r\n        if (doItemsMatch(firstItem, { x, y })) {\r\n            return setFirstItem(null);\r\n        }\r\n        if (areItemsAdjacent(firstItem, { x, y })) {\r\n            const tempSecondItem = { x, y };\r\n            setIsProcessing(true);\r\n            setSecondItem(tempSecondItem);\r\n            await wait()\r\n\r\n            const newMatrix = createTwoFieldSwappedMatrix(firstItem)(tempSecondItem)(oldMatrix);\r\n            setMatrix(newMatrix);\r\n            await wait();\r\n\r\n            setFirstItem(null);\r\n            setSecondItem(null);\r\n            const moveHadHits = await updateBoardWithMatrix({\r\n                newMatrix,\r\n                setMatrix,\r\n                setComboMatrix,\r\n                bumpScore\r\n            });\r\n            if (!moveHadHits) {\r\n                setMatrix(oldMatrix);\r\n                revertBoard(oldMatrix);\r\n            }\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    return <div css={BoardCss}>{\r\n        matrix.map((xArray, x) =>\r\n            xArray.map((yField, y) =>\r\n                <Jewel\r\n                    key={(8 * x) + y}\r\n                    x={x}\r\n                    y={y}\r\n                    isFocused={doItemsMatch({ x, y }, firstItem) || doItemsMatch({ x, y }, secondItem)}\r\n                    isInCombo={comboMatrix[x][y] === null}\r\n                    backgroundColor={JewelsIndexHash[matrix[x][y]]}\r\n                    onItemClick={onItemClick}></Jewel>\r\n            )\r\n        )\r\n    }</div>;\r\n};\r\n\r\nexport default forwardRef(Board);\r\n"]},"metadata":{},"sourceType":"module"}